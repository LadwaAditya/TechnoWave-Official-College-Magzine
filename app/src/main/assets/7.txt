/*
the singly linked list implemented in c++.To add nodes at the front.
To delete node at front.To display the list.

*/



#include<iostream.h>
#include<conio.h>
#include<stdlib.h>
struct element
{
int data;
struct element *next;
};
typedef struct element node;
class list
{
node *head;
public:
list()
{
head=NULL;
}
void insfront();
void delfront();
void display();
};
void list :: insfront()
{
int val;
node *ref;
cout<<"\nenter the element to be inserted:";
cin>>val;
ref=(node*)malloc(sizeof(node));
ref->data=val;
ref->next=head;
head=ref;
}
void list::delfront()
{
int val;
node *ref;
	if(head==NULL)
	{
	cout<<"\nthe list is empty";
	return;
	}
ref=head;
val=head->data;
head=head->next;
cout<<"\nthe element deleted is:"<<val;
free(ref);
}
void list::display()
{
node *ref;
	if(head==NULL)
	{
	cout<<"\nthe list is empty";
	return;
	}
ref=head;
cout<<"\n the list is as follows\n";
	while(ref!=NULL)
	{
	cout<<"\t"<<ref->data;
	ref=ref->next;
	}
}
void main()
{
int choice;
list list1;
do
{
cout<<"\n1.insert front \n 2.delete front \n 3.display \n 4.exit"<<endl;
cout<<"\nenter the choice:";
cin>>choice;
	switch(choice)
	{
	case 1:
	list1.insfront();
	break;
	case 2:
	list1.delfront();
	break;
	case 3:
	list1.display();
	break;
	case 4:break;
	default:break;
	}
}while(choice!=4);
getch();
}









